expandtypeattribute(hal_wifi_hostapd)
expandtypeattribute(hal_wifi_hostapd_client)
expandtypeattribute(hal_wifi_hostapd_server)
neverallow hal_wifi_hostapd_server sdcard_type:dir { append audit_access execmod execute ioctl lock map mounton no_w_dir_perms open quotaon read relabelto search unlink watch watch_mount watch_reads watch_sb watch_with_perm };
neverallow hal_wifi_hostapd_server sdcard_type:file *;
neverallow hal_wifi_hostapd_server fuse:dir { append audit_access execmod execute ioctl lock map mounton no_w_dir_perms open quotaon read relabelto search unlink watch watch_mount watch_reads watch_sb watch_with_perm };
neverallow hal_wifi_hostapd_server fuse:file *;
allow hal_wifi_hostapd_client hal_wifi_hostapd_server:binder { call transfer };
allow hal_wifi_hostapd_client hal_wifi_hostapd_server:binder transfer;
allow hal_wifi_hostapd_client hal_wifi_hostapd_server:fd *;
allow hal_wifi_hostapd_server hal_wifi_hostapd_client:binder transfer;
allow hal_wifi_hostapd_server hal_wifi_hostapd_client:binder { call transfer };
allow hal_wifi_hostapd_server hal_wifi_hostapd_client:fd *;
allow hal_wifi_hostapd_server su:tcp_socket { accept getopt read write };
allow hal_wifi_hostapd_server dumpstate:fifo_file write;
allow hal_wifi_hostapd_server self:capability { net_admin net_raw };
allow hal_wifi_hostapd_server self:cap_userns { net_admin net_raw };
allow hal_wifi_hostapd_server self:netlink_socket create_socket_perms_no_ioctl;
allow hal_wifi_hostapd_server self:netlink_generic_socket create_socket_perms_no_ioctl;
allow hal_wifi_hostapd_server self:packet_socket create_socket_perms_no_ioctl;
allow hal_wifi_hostapd_server self:netlink_route_socket nlmsg_write;
allow hal_wifi_hostapd_server sysfs_net:dir search;
allow hal_wifi_hostapd_server proc_net_type:file { getattr open read };
allow hal_wifi_hostapd_default hostapd_data_file:dir create_dir_perms;
allow hal_wifi_hostapd_default hostapd_data_file:dir rw_dir_perms;
allow hal_wifi_hostapd_default hostapd_data_file:file create_file_perms;
allow hal_wifi_hostapd_default hostapd_data_file:sock_file create_file_perms;
allow hal_wifi_hostapd_default vendor_wifi_vendor_data_file:dir rw_dir_perms;
allow hal_wifi_hostapd_default vendor_fstman:unix_dgram_socket sendto;
allow hal_wifi_hostapd_default vendor_qms:unix_dgram_socket sendto;
allow hal_wifi_hostapd_default vendor_wigig_hostapd_socket:dir create_dir_perms;
allow hal_wifi_hostapd_default vendor_wigig_hostapd_socket:sock_file create_file_perms;
allow hal_wifi_hostapd_default vendor_wigighalsvc:unix_dgram_socket sendto;
allow hal_wifi_hostapd_default vendor_wifi_vendor_wpa_socket:dir r_dir_perms;
allow hal_wifi_hostapd_default vendor_wifi_vendor_wpa_socket:sock_file rw_file_perms;
allow hal_wifi_hostapd_default vendor_wigig_vendor_wpa_socket:sock_file rw_file_perms;
allow hal_wifi_hostapd_default vendor_cnd:unix_dgram_socket sendto;
allow hal_wifi_hostapd_default vendor_qvrd_vndr:unix_dgram_socket sendto;
allow hal_wifi_hostapd_default wpa_data_file:dir search;
allow hal_wifi_hostapd_default wpa_data_file:sock_file write;
allow hal_wifi_hostapd vendor_wifi_vendor_log_data_file:dir search;
allowxperm hal_wifi_hostapd_server self:ioctl udp_socket { 0x6900 0x6902 };
allowxperm hal_wifi_hostapd_server self:ioctl udp_socket { range 0x890b 0x890d 0x8911 0x8914 0x8916 0x8918 0x891a range 0x891c 0x8920 range 0x8922 0x8927 0x8929 range 0x8930 0x8932 range 0x8934 0x8937 0x8939 range 0x8940 0x8941 0x8943 range 0x8946 0x894b range 0x8953 0x8955 range 0x8960 0x8962 range 0x8970 0x8971 range 0x8980 0x8983 range 0x8990 0x8995 range 0x89a0 0x89a3 0x89b0 range 0x89e0 0x89ff };
allowxperm hal_wifi_hostapd_server self:ioctl udp_socket { 0x8b00 0x8b02 0x8b04 0x8b06 0x8b08 0x8b0a 0x8b0c 0x8b0e 0x8b10 range 0x8b14 0x8b1d 0x8b20 0x8b22 0x8b24 0x8b26 0x8b28 range 0x8b2a 0x8b2c range 0x8b30 0x8b36 range 0x8be0 0x8bff };
init_daemon_domain(hal_wifi_hostapd_default)
r_dir_file(hal_wifi_hostapd_default, vendor_wifi_vendor_data_file)
binder_use(hal_wifi_hostapd_server)
net_domain(hal_wifi_hostapd_default)
hal_server_domain(hal_wifi_hostapd_default, hal_wifi_hostapd)
hal_attribute_service(hal_wifi_hostapd, hal_wifi_hostapd_service)
hal_attribute_hwservice(hal_wifi_hostapd, hal_wifi_hostapd_hwservice)
type hal_wifi_hostapd_default, domain;
type hal_wifi_hostapd_default_exec, exec_type, file_type, vendor_file_type;
type hal_wifi_hostapd_hwservice, hwservice_manager_type, protected_hwservice;
